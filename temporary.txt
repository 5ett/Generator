.side-nav{
    position: fixed;
}

.side-nav .nav-item{
    margin-bottom: 0.6em;
    font-size: 15;
    padding: 0.8em;
    transition: all .2;
    /*display: block;*/
    color: #6c757d !important;
    cursor: pointer;
}

.side-nav .nav-item a{
    /*float: right;*/
    margin-top: 0.1em;
    /*display: inline;*/
}

.side-nav li:hover{
    background-color: var(--surface1);
    border-radius: 9px;
    color: var(--text3);
    font-weight: lighter;
}

.side-nav li:hover a{
    color: var(--text1);
}

.nav-item svg{
    padding-top: 0.2em;
    fill: #6c757d;
    margin-right: 0.4em;
    margin-left: 0.2em;
    /*float: left;*/
    cursor: pointer;
}

.side-nav li:hover .vector{
    fill: var(--border-col)
}





<!-- <div class="cancel">
                        <li class="elipses">
                            <a href="#" class="caret"></a>
                            <ul class="dropdown">
                                <li class="dropdown-item">
                                    <a href="{{ url_for('index') }}">cancel</a>
                                </li>
                            </ul>
                        </li>
                     </div> -->



try:
            search_param = form.search_bar.data.split(':')
            if search_param[0] == 'quantity':
                search_input = int(search_param[1])
                return_query = Storage.query.filter_by(
                    item_quantity=search_input).order_by(Storage.id.desc()).all()

            elif search_param[0] == 'price':
                search_input = float(search_param[1])

                return_query_batch = Ticket.query.filter_by(
                    total_sum=search_input).order_by(Ticket.id.desc()).all()
                if return_query_batch:
                    payload.append(return_query_batch)

                return_query_individual = Storage.query.filter_by(
                    total_price=search_input).order_by(Storage.id.desc()).all()
                if return_query_individual:
                    payload.append(return_query_batch)
        except:
            return_query = Ticket.query.filter_by(
                belongs_to=form.search_bar.data).order_by(Ticket.id.desc()).all()
